#!/bin/bash

echo "üîç V√©rification de la configuration Heroku"

# V√©rification des fichiers de configuration
echo "üìÑ V√©rification des fichiers requis"
MISSING_FILES=0

check_file() {
  if [ -f "$1" ]; then
    echo "  ‚úÖ $1 existe"
  else
    echo "  ‚ùå $1 manquant"
    MISSING_FILES=$((MISSING_FILES+1))
  fi
}

check_file "Procfile"
check_file "runtime.txt"
check_file "requirements.txt"
check_file "nltk.txt"
check_file "app.json"

if [ $MISSING_FILES -gt 0 ]; then
  echo "‚ö†Ô∏è Fichiers manquants: $MISSING_FILES. Ex√©cutez setup_heroku.sh pour les cr√©er."
else
  echo "‚úÖ Tous les fichiers requis sont pr√©sents"
fi

# V√©rification du Procfile
if [ -f "Procfile" ]; then
  PROCFILE_CONTENT=$(cat Procfile)
  if [[ $PROCFILE_CONTENT == *"gunicorn"* && $PROCFILE_CONTENT == *"app"* && $PROCFILE_CONTENT == *"PORT"* ]]; then
    echo "‚úÖ Procfile correctement configur√©"
  else
    echo "‚ö†Ô∏è Procfile peut ne pas √™tre correctement configur√©"
    echo "   Contenu actuel: $PROCFILE_CONTENT"
    echo "   Format attendu: web: gunicorn api:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:\$PORT"
  fi
fi

# V√©rification de l'installation Heroku CLI
if command -v heroku >/dev/null 2>&1; then
  echo "‚úÖ Heroku CLI est install√©"
  
  # V√©rifier si l'utilisateur est connect√©
  HEROKU_AUTH=$(heroku auth:whoami 2>&1)
  if [[ $HEROKU_AUTH == *"Error"* ]]; then
    echo "‚ö†Ô∏è Vous n'√™tes pas connect√© √† Heroku. Ex√©cutez 'heroku login' pour vous connecter."
  else
    echo "‚úÖ Connect√© √† Heroku en tant que: $HEROKU_AUTH"
    
    # V√©rifier les addons MongoDB et Redis
    HEROKU_ADDONS=$(heroku addons 2>&1)
    if [[ $HEROKU_ADDONS == *"mongolab"* ]]; then
      echo "‚úÖ MongoDB addon est install√©"
    else
      echo "‚ö†Ô∏è MongoDB addon n'est pas install√©. Ex√©cutez setup_mongodb_heroku.sh"
    fi
    
    if [[ $HEROKU_ADDONS == *"heroku-redis"* ]]; then
      echo "‚úÖ Redis addon est install√©"
    else
      echo "‚ö†Ô∏è Redis addon n'est pas install√©. Vous pourriez en avoir besoin."
    fi
  fi
else
  echo "‚ùå Heroku CLI n'est pas install√©. Installez-le via https://devcenter.heroku.com/articles/heroku-cli"
fi

# V√©rification de git
if command -v git >/dev/null 2>&1; then
  echo "‚úÖ Git est install√©"
  
  # V√©rifier si le d√©p√¥t est initialis√©
  if [ -d ".git" ]; then
    echo "‚úÖ D√©p√¥t Git initialis√©"
    
    # V√©rifier si Heroku est configur√© comme remote
    GIT_REMOTES=$(git remote -v)
    if [[ $GIT_REMOTES == *"heroku"* ]]; then
      echo "‚úÖ Remote Heroku configur√©"
    else
      echo "‚ö†Ô∏è Remote Heroku non configur√©. Ex√©cutez 'heroku git:remote -a [NOM_APP]'"
    fi
  else
    echo "‚ö†Ô∏è D√©p√¥t Git non initialis√©. Ex√©cutez 'git init'"
  fi
else
  echo "‚ùå Git n'est pas install√©. Vous en aurez besoin pour d√©ployer sur Heroku."
fi

echo "üéâ V√©rification termin√©e!" 