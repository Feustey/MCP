[metadata]
name = "mcp-lightning-optimizer"
version = "1.0.0"
description = "Lightning Network Optimizer with AI Intelligence"

[phases.setup]
nixPkgs = [
  "python39",
  "python39Packages.pip",
  "python39Packages.setuptools",
  "python39Packages.wheel",
  "gcc",
  "git",
  "curl",
  "redis",
  "postgresql",
  "openssl",
  "pkg-config",
  "libffi",
  "rustc",
  "cargo"
]

[phases.install]
cmds = [
  "python -m pip install --upgrade pip setuptools wheel",
  "python -m pip install --no-cache-dir -r requirements.txt",
  "python -m pip install --no-cache-dir gunicorn uvicorn[standard] redis[hiredis]"
]

[phases.build]
cmds = [
  "echo 'Building MCP Lightning Optimizer...'",
  "python -m compileall src/ app/ -f",
  "find . -name '*.pyc' -delete",
  "find . -name '__pycache__' -type d -exec rm -rf {} + || true"
]

[start]
cmd = "gunicorn app.main:app --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:$PORT --workers $WORKERS --max-requests $MAX_REQUESTS --timeout $TIMEOUT --preload --access-logfile - --error-logfile -"

[env]
# Environnement d'exécution
PORT = { default = "8000" }
WORKERS = { default = "2" }
WORKER_CLASS = { default = "uvicorn.workers.UvicornWorker" }
MAX_REQUESTS = { default = "1000" }
TIMEOUT = { default = "60" }

# Redis et Cache
REDIS_URL = { default = "redis://localhost:6379" }
CACHE_TTL = { default = "300" }
CACHE_NAMESPACE = { default = "mcp" }

# APIs externes
OPENAI_API_KEY = { default = "" }
OPENAI_MODEL = { default = "gpt-4o-mini" }
SPARKSEER_API_KEY = { default = "" }
SPARKSEER_BASE_URL = { default = "https://api.sparkseer.space" }

# LNBits Configuration
LNBITS_URL = { default = "" }
LNBITS_API_KEY = { default = "" }

# Sécurité
SECRET_KEY = { default = "" }
CORS_ORIGINS = { default = "https://dazno.de,https://api.dazno.de" }

# Logging
LOG_LEVEL = { default = "INFO" }
LOG_FORMAT = { default = "json" }

# App Mode
ENVIRONMENT = { default = "production" }
