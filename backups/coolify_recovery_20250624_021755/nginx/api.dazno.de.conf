# Configuration Nginx pour api.dazno.de
# Reverse proxy sécurisé avec restrictions d'accès

server {
    listen 80;
    server_name api.dazno.de;
    
    # Redirection forcée vers HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.dazno.de;
    
    # Certificats SSL Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/api.dazno.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.dazno.de/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:RC4-SHA;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Headers de sécurité
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://app.dazno.de;" always;
    
    # Rate limiting global
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api_burst:10m rate=50r/s;
    
    # Limite stricte pour les API sensibles
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # Variables pour contrôle d'accès par origine
    set $allowed_origin "";
    if ($http_origin ~* "^https://(app\.dazno\.de|dazno\.de|localhost:3000)$") {
        set $allowed_origin $http_origin;
    }
    
    # Configuration CORS sécurisée
    add_header Access-Control-Allow-Origin $allowed_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, X-API-Key" always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Max-Age 3600 always;
    
    # Gestion des requêtes OPTIONS (preflight)
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin $allowed_origin;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, X-API-Key";
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Max-Age 3600;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 200;
    }
    
    # Blocage des bots et crawlers malveillants
    if ($http_user_agent ~* (bot|crawler|spider|scraper|scanner|wget|curl|python|perl|ruby|java)) {
        # Exceptions pour monitoring interne
        set $block_ua 1;
        if ($remote_addr ~* "^127\.0\.0\.1|^10\.|^172\.16\.|^192\.168\.") {
            set $block_ua 0;
        }
        if ($block_ua) {
            return 403;
        }
    }
    
    # Blocage des tentatives d'injection
    if ($request_uri ~* "(union|select|insert|delete|update|drop|create|alter|exec|script|javascript|vbscript|onload|onerror)") {
        return 403;
    }
    
    # Health check public (sans rate limiting)
    location = /health {
        proxy_pass http://mcp-api:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pas de rate limiting pour health check
        access_log off;
    }
    
    # Endpoints d'authentification avec rate limiting strict
    location ~* ^/api/v1/(auth|login|token) {
        limit_req zone=auth burst=3 nodelay;
        
        proxy_pass http://mcp-api:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts adaptés pour l'authentification
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Endpoints administrateur avec accès très restreint
    location /api/v1/admin/ {
        # Accès limité aux IPs internes uniquement
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        limit_req zone=auth burst=2 nodelay;
        
        proxy_pass http://mcp-api:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Admin-Access "true";
    }
    
    # API principale avec rate limiting modéré
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://mcp-api:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Original-URI $request_uri;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts optimisés pour l'API
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer pour améliorer les performances
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Routes racine avec rate limiting
    location / {
        limit_req zone=api_burst burst=50 nodelay;
        
        proxy_pass http://mcp-api:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Métriques Prometheus (accès restreint)
    location /metrics {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
        
        proxy_pass http://127.0.0.1:9090/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        access_log off;
    }
    
    # Dashboard Grafana avec authentification
    location /grafana/ {
        auth_basic "Monitoring MCP";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://127.0.0.1:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configuration spécifique pour Grafana
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_redirect off;
        
        # Support des WebSockets pour Grafana
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Blocage des fichiers sensibles
    location ~* \.(env|ini|conf|bak|backup|old|tmp|log)$ {
        deny all;
        return 404;
    }
    
    # Blocage des répertoires système
    location ~* /(\.git|\.svn|\.hg|vendor|node_modules|\.env) {
        deny all;
        return 404;
    }
    
    # Logging personnalisé
    access_log /var/log/nginx/api.dazno.de.access.log combined;
    error_log /var/log/nginx/api.dazno.de.error.log warn;
    
    # Configuration gzip pour optimiser les performances
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
} 