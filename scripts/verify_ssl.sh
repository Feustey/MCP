#!/bin/bash
# Script de v√©rification SSL pour api.dazno.de
# √Ä ex√©cuter apr√®s le d√©ploiement SSL

set -e

DOMAIN="api.dazno.de"
APP_DIR="/var/www/mcp"

echo "üîç V√©rification du d√©ploiement SSL pour $DOMAIN..."

# V√©rification du certificat SSL
echo -n "üìú Certificat SSL : "
if [ -d "/etc/letsencrypt/live/$DOMAIN" ]; then
    echo "‚úÖ Pr√©sent"
    echo "   D√©tails du certificat :"
    certbot certificates | grep -A 6 "$DOMAIN"
else
    echo "‚ùå Manquant"
    exit 1
fi

# V√©rification de la configuration Nginx
echo -n "üîß Configuration Nginx : "
if nginx -t > /dev/null 2>&1; then
    echo "‚úÖ Valide"
else
    echo "‚ùå Invalide"
    nginx -t
    exit 1
fi

# V√©rification du service Nginx
echo -n "üöÄ Service Nginx : "
if systemctl is-active --quiet nginx; then
    echo "‚úÖ En cours d'ex√©cution"
else
    echo "‚ùå Arr√™t√©"
    exit 1
fi

# V√©rification des ports
echo -n "üîå Ports (80/443) : "
if netstat -tuln | grep -q ":80 " && netstat -tuln | grep -q ":443 "; then
    echo "‚úÖ En √©coute"
else
    echo "‚ùå Non disponibles"
    netstat -tuln | grep -E ":80 |:443 "
    exit 1
fi

# V√©rification des services Docker
echo "üê≥ Services Docker :"
cd $APP_DIR
if [ -f "docker-compose.yml" ]; then
    docker-compose ps
else
    echo "‚ùå docker-compose.yml non trouv√© dans $APP_DIR"
    exit 1
fi

# Test HTTPS
echo -n "üåê Test HTTPS : "
if curl -s -o /dev/null -w "%{http_code}" https://$DOMAIN/health; then
    echo "‚úÖ Accessible"
else
    echo "‚ùå Non accessible"
    echo "   D√©tails de l'erreur :"
    curl -v https://$DOMAIN/health 2>&1
    exit 1
fi

echo "‚úÖ V√©rification SSL termin√©e avec succ√®s !" 